{"ast":null,"code":"export var getCaretCoordinates = function getCaretCoordinates() {\n  var x, y;\n  var isSupported = typeof window.getSelection !== \"undefined\";\n  if (isSupported) {\n    var selection = window.getSelection();\n    // Check if there is a selection (i.e. cursor in place)\n    if (selection.rangeCount !== 0) {\n      // Clone the range\n      var range = selection.getRangeAt(0).cloneRange();\n      // Collapse the range to the start, so there are not multiple chars selected\n      range.collapse(false);\n      // getCientRects returns all the positioning information we need\n      var rect = range.getClientRects()[0];\n      if (rect) {\n        x = rect.left;\n        y = rect.top;\n      }\n    }\n  }\n  return {\n    x: x,\n    y: y\n  };\n};\nexport var setCaretToEnd = function setCaretToEnd(element) {\n  // Create a new range\n  var range = document.createRange();\n  // Get the selection object\n  var selection = window.getSelection();\n  // Select all the content from the contenteditable element\n  range.selectNodeContents(element);\n  // Collapse it to the end, i.e. putting the cursor to the end\n  range.collapse(false);\n  // Clear all existing selections\n  selection.removeAllRanges();\n  // Put the new range in place\n  selection.addRange(range);\n  // Set the focus to the contenteditable element\n  element.focus();\n};","map":{"version":3,"names":["getCaretCoordinates","x","y","isSupported","window","getSelection","selection","rangeCount","range","getRangeAt","cloneRange","collapse","rect","getClientRects","left","top","setCaretToEnd","element","document","createRange","selectNodeContents","removeAllRanges","addRange","focus"],"sources":["/Users/nakaokashinzo/Documents/react/notion-clone/src/utils/caretHelpers.js"],"sourcesContent":["export const getCaretCoordinates = () => {\n    let x, y;\n    const isSupported = typeof window.getSelection !== \"undefined\";\n    if (isSupported) {\n      const selection = window.getSelection();\n      // Check if there is a selection (i.e. cursor in place)\n      if (selection.rangeCount !== 0) {\n        // Clone the range\n        const range = selection.getRangeAt(0).cloneRange();\n        // Collapse the range to the start, so there are not multiple chars selected\n        range.collapse(false);\n        // getCientRects returns all the positioning information we need\n        const rect = range.getClientRects()[0];\n        if (rect) {\n          x = rect.left;\n          y = rect.top;\n        }\n      }\n    }\n    return { x, y };\n  };\n  \n  export const setCaretToEnd = (element) => {\n    // Create a new range\n    const range = document.createRange();\n    // Get the selection object\n    const selection = window.getSelection();\n    // Select all the content from the contenteditable element\n    range.selectNodeContents(element);\n    // Collapse it to the end, i.e. putting the cursor to the end\n    range.collapse(false);\n    // Clear all existing selections\n    selection.removeAllRanges();\n    // Put the new range in place\n    selection.addRange(range);\n    // Set the focus to the contenteditable element\n    element.focus();\n  };\n  "],"mappings":"AAAA,OAAO,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;EACrC,IAAIC,CAAC,EAAEC,CAAC;EACR,IAAMC,WAAW,GAAG,OAAOC,MAAM,CAACC,YAAY,KAAK,WAAW;EAC9D,IAAIF,WAAW,EAAE;IACf,IAAMG,SAAS,GAAGF,MAAM,CAACC,YAAY,CAAC,CAAC;IACvC;IACA,IAAIC,SAAS,CAACC,UAAU,KAAK,CAAC,EAAE;MAC9B;MACA,IAAMC,KAAK,GAAGF,SAAS,CAACG,UAAU,CAAC,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC;MAClD;MACAF,KAAK,CAACG,QAAQ,CAAC,KAAK,CAAC;MACrB;MACA,IAAMC,IAAI,GAAGJ,KAAK,CAACK,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;MACtC,IAAID,IAAI,EAAE;QACRX,CAAC,GAAGW,IAAI,CAACE,IAAI;QACbZ,CAAC,GAAGU,IAAI,CAACG,GAAG;MACd;IACF;EACF;EACA,OAAO;IAAEd,CAAC,EAADA,CAAC;IAAEC,CAAC,EAADA;EAAE,CAAC;AACjB,CAAC;AAED,OAAO,IAAMc,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,OAAO,EAAK;EACxC;EACA,IAAMT,KAAK,GAAGU,QAAQ,CAACC,WAAW,CAAC,CAAC;EACpC;EACA,IAAMb,SAAS,GAAGF,MAAM,CAACC,YAAY,CAAC,CAAC;EACvC;EACAG,KAAK,CAACY,kBAAkB,CAACH,OAAO,CAAC;EACjC;EACAT,KAAK,CAACG,QAAQ,CAAC,KAAK,CAAC;EACrB;EACAL,SAAS,CAACe,eAAe,CAAC,CAAC;EAC3B;EACAf,SAAS,CAACgB,QAAQ,CAACd,KAAK,CAAC;EACzB;EACAS,OAAO,CAACM,KAAK,CAAC,CAAC;AACjB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}